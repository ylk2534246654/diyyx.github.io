<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[博客上线成功]]></title>
    <url>%2F2019%2F04%2F04%2F%E5%8D%9A%E5%AE%A2%E4%B8%8A%E7%BA%BF%E6%88%90%E5%8A%9F%2F</url>
    <content type="text"><![CDATA[上线后感想其实域名上个月就买好了，一直没用，昨天正好把NRS更新，今天一大早就着手操办起了博客，到下午两点左右，在尝试几次重装git和配置Hexo后总算将仓库上传到github,最后再解析到diyyx.wang，OK!虽然看起来过程很简单，但以前教程和现在的版本不同，难免面对各种问题。 接下来我会继续完善博客排版 为什么要建立自己的独立博客？有句话叫做“我的地盘听我的”，个人独立博客可以按照自己的想法任意设计、任意管理，安装一套博客程序即可使用，也不用再担心自己发布的文章随时面临被删甚至被关闭的危险，以致有的时候辛辛苦苦培养起来的博客说媒就没了，独立博客内容更具自主权，“我的博客我做主”。 搭建过程遇到的问题1.关于HEXO安装失败的解决办法12npm install -g cnpm --registry=https://registry.npm.taobao.orgcnpm install hexo-cli -g]]></content>
  </entry>
  <entry>
    <title></title>
    <url>%2F2019%2F04%2F03%2Fhello-world%2F</url>
    <content type="text"><![CDATA[package com.yx.sreditor.Utils; import android.content.Context;import android.os.Environment; import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException; /** Created by ���� on 2019/4/19.//��Ҫ����Ȩ�޼�����Ȩ��AndroidManifest.xml Mainif (android.os.Build.VERSION.SDK_INT &gt; 9) { StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build(); StrictMode.setThreadPolicy(policy);}ActivityCompat.requestPermissions(this, new String[]{android.Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1); */public class file { /** * * @param context * @param filename �ļ����� * @return * @throws IOException */ public static String read(Context context, String filename) throws IOException { StringBuilder sb = new StringBuilder(&quot;&quot;); if(Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)){ String path = Environment.getExternalStorageDirectory().getAbsolutePath()+ &quot;/Android/data/com.jundroo.simplerockets/files/&quot;+filename; //filename = context.getExternalCacheDir().getAbsolutePath() + java.io.File.separator + path; //���ļ������� FileInputStream inputStream = new FileInputStream(path); byte[] buffer = new byte[1024]; int len = inputStream.read(buffer); //��ȡ�ļ����� while(len &gt; 0){ sb.append(new String(buffer,0,len)); //���������ݷŵ�buffer�� len = inputStream.read(buffer); } //�ر������� inputStream.close(); } return sb.toString(); } /** * * @param filename �ļ����� * @param data �豣������� */ public static void write(String filename,String data) { if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) { String path = Environment.getExternalStorageDirectory().getAbsolutePath() + &quot;/Android/data/com.jundroo.simplerockets/files/&quot;+filename; //�½�һ��File���󣬰�����Ҫ�����ļ�·������ȥ�� java.io.File file = new java.io.File(path); //�ж��ļ��Ƿ���ڣ�������ھ�ɾ���� if (file.exists()) { file.delete(); } try { //ͨ���ļ��Ķ���file��createNewFile()�����������ļ� file.createNewFile(); //�½�һ��FileOutputStream()�����ļ���·������ȥ FileOutputStream fileOutputStream = new FileOutputStream(path); //����һ���ַ���������ת�����ֽ����� byte[] bytes = data.getBytes(); //ͨ�����������д���ֽ����� fileOutputStream.write(bytes); //���� fileOutputStream.close(); } catch (IOException e) { e.printStackTrace(); } } } }]]></content>
  </entry>
</search>
